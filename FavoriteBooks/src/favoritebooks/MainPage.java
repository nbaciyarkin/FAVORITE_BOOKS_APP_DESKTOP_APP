/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package favoritebooks;

import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author yarkingazibaba
 */
public class MainPage extends javax.swing.JFrame {
    
    String categoryArray[] = {"horror","adventure","biography","novel","detective","comic","science fiction","fantastic","poem"};
        
    FileHandler fileHandler = new FileHandler();
    ShowBox  showBox = new ShowBox(); 
    
    ImageIcon iconCıcekKokusu = new ImageIcon("src/favoritebooks/bookImage/Book1Cover.jpeg");
    ImageIcon iconDeathlyHallows = new ImageIcon("src/favoritebooks/bookImage/Book2Cover.jpeg");
    ImageIcon iconDıgıtalFortress = new ImageIcon("src/favoritebooks/bookImage/Book3Cover.jpeg");
    ImageIcon icongobletOfFire = new ImageIcon("src/favoritebooks/bookImage/Book4Cover.jpeg");
    ImageIcon iconTheGreatGatsby = new ImageIcon("src/favoritebooks/bookImage/Book5Cover.jpeg");
    
    ImageIcon coverArray [] = {iconCıcekKokusu,iconDıgıtalFortress,iconTheGreatGatsby,iconDeathlyHallows,icongobletOfFire,};
    
    
    
    
    
    ////Users/yarkingazibaba/NetBeansProjects/FavoriteBooks/src/favoritebooks/bookImage/deathlyHallowsCover.jpeg
    
      
       Library library;
    /**
     * Creates new form MainPage
     */
    public MainPage(Library library) {
        initComponents();
        this.library = library; 
        coverDemonstratorLabel.setText("");   
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        bookFinderLbl = new javax.swing.JLabel();
        addBookBtn = new javax.swing.JButton();
        ListBookTextField = new javax.swing.JTextField();
        categoryListBtn = new javax.swing.JButton();
        findBookField = new javax.swing.JTextField();
        findBookByTitleBtn = new javax.swing.JButton();
        imageViewLabel = new javax.swing.JLabel();
        listByNameSurnameBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ListByCategoryAccordingRatingBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        deleteBookbyIdTextField = new javax.swing.JTextField();
        isDeletedLabel = new javax.swing.JLabel();
        listNumberOfBooksByYearBtn = new javax.swing.JButton();
        findBookByIdBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        bookInformationTextArea = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        coverDemonstratorLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(186, 79, 84));

        bookFinderLbl.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        bookFinderLbl.setForeground(new java.awt.Color(0, 255, 0));
        bookFinderLbl.setText("Book Finder");

        addBookBtn.setBackground(new java.awt.Color(255, 255, 255));
        addBookBtn.setText("Go To The Add Book Page");
        addBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBookBtnActionPerformed(evt);
            }
        });

        ListBookTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListBookTextFieldActionPerformed(evt);
            }
        });

        categoryListBtn.setText("List By Category");
        categoryListBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryListBtnActionPerformed(evt);
            }
        });

        findBookByTitleBtn.setText("Find Book By Title");
        findBookByTitleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBookByTitleBtnActionPerformed(evt);
            }
        });

        listByNameSurnameBtn.setText("List By Author Name And Surname");
        listByNameSurnameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listByNameSurnameBtnActionPerformed(evt);
            }
        });

        listTextArea.setEditable(false);
        listTextArea.setColumns(20);
        listTextArea.setRows(5);
        jScrollPane2.setViewportView(listTextArea);

        jLabel2.setText("Enter the this area, category or author name and surname or year");

        jLabel3.setText("Enter the this area, book id or book title or keyword");

        ListByCategoryAccordingRatingBtn.setText(" List Category by Sorted Ratings");
        ListByCategoryAccordingRatingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListByCategoryAccordingRatingBtnActionPerformed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("If you want to delete a book you can enter the book id to this area ");

        isDeletedLabel.setForeground(new java.awt.Color(153, 255, 0));

        listNumberOfBooksByYearBtn.setText("Number Of Books Given Year");
        listNumberOfBooksByYearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listNumberOfBooksByYearBtnActionPerformed(evt);
            }
        });

        findBookByIdBtn.setText("Find Book Cover By Id");
        findBookByIdBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findBookByIdBtnActionPerformed(evt);
            }
        });

        bookInformationTextArea.setEditable(false);
        bookInformationTextArea.setColumns(20);
        bookInformationTextArea.setRows(5);
        jScrollPane1.setViewportView(bookInformationTextArea);

        jLabel1.setText("You can find books by keywords");

        jLabel6.setForeground(new java.awt.Color(102, 255, 0));
        jLabel6.setText("Book Information Area");

        jLabel7.setForeground(new java.awt.Color(102, 255, 0));
        jLabel7.setText("Book List Area");

        coverDemonstratorLabel.setForeground(new java.awt.Color(102, 255, 0));
        coverDemonstratorLabel.setText("Book Cover");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(ListBookTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(329, 329, 329))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bookFinderLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(listByNameSurnameBtn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(104, 104, 104)
                                        .addComponent(findBookField, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(69, 69, 69)
                                        .addComponent(findBookByTitleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(findBookByIdBtn))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(26, 26, 26)
                                        .addComponent(jLabel1)
                                        .addGap(349, 349, 349)
                                        .addComponent(coverDemonstratorLabel))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(265, 265, 265)
                                                .addComponent(categoryListBtn)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(38, 38, 38)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel6)
                                                    .addComponent(ListByCategoryAccordingRatingBtn))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(listNumberOfBooksByYearBtn))))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(186, 186, 186)
                                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(isDeletedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jLabel4))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(167, 167, 167)
                                .addComponent(deleteBookbyIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71)
                        .addComponent(imageViewLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(addBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(166, 166, 166))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bookFinderLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ListBookTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(categoryListBtn)
                            .addComponent(listByNameSurnameBtn)
                            .addComponent(ListByCategoryAccordingRatingBtn)
                            .addComponent(listNumberOfBooksByYearBtn))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(findBookField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 130, Short.MAX_VALUE)
                        .addComponent(addBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isDeletedLabel)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                .addComponent(coverDemonstratorLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imageViewLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(findBookByIdBtn)
                                    .addComponent(findBookByTitleBtn))
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteBookbyIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn)
                        .addGap(12, 12, 12))))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBookBtnActionPerformed
            AddBookFrame addBookFrame = new AddBookFrame(library); 
            this.setVisible(false);
            addBookFrame.setVisible(true);    
    }//GEN-LAST:event_addBookBtnActionPerformed

    private void ListBookTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListBookTextFieldActionPerformed
   
    }//GEN-LAST:event_ListBookTextFieldActionPerformed

    private void categoryListBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryListBtnActionPerformed
        listTextArea.setText("");
        String category = ListBookTextField.getText().toString().toLowerCase();
        
        if(category != null && !category.equals("")){
            ArrayList<Book> foundBooksByCategory = library.ListTheBooksTittleAccordingToCategory(category,library.getBookListInLibrary());
        
        
            for(int i =0; i < foundBooksByCategory.size(); i++){
                if(i == 0){
                    String bookTitle = foundBooksByCategory.get(i).title.toString();
                    listTextArea.setText("Title: "+ bookTitle);        
                } 
                else {
                    String bookTitle = foundBooksByCategory.get(i).title.toString();
                    String previousText = listTextArea.getText();
                    listTextArea.setText(previousText + "\n" + "Title: "+ bookTitle);      
                }
            }
            
        }
        else{
           showBox.infoBox("Please enter proper category", "List of Books according to Category"); 
        }
        
       
       ListBookTextField.setText("");       
    }//GEN-LAST:event_categoryListBtnActionPerformed

    private void listByNameSurnameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listByNameSurnameBtnActionPerformed
        listTextArea.setText("");
        String authorNameSurname = camelCase(ListBookTextField.getText().toString());
        
        if(authorNameSurname != null && !authorNameSurname.equals("")){
             ArrayList<Book> foundBooksByAuthorNameAndSurname = library.listTheBooksAccordingToAuthorNameAndSurname(authorNameSurname,library.getBookListInLibrary());
        
        for(int i =0; i < foundBooksByAuthorNameAndSurname.size(); i++){
            if(i == 0) {
                String bookTitle = foundBooksByAuthorNameAndSurname.get(i).title;
                String bookDescription = foundBooksByAuthorNameAndSurname.get(i).shortDescription.toString();
                listTextArea.setText("Title : "+ bookTitle + " , " + "Short Description: " + bookDescription);        
            } 
            else {
                    String bookTitle = foundBooksByAuthorNameAndSurname.get(i).title.toString();
                    String bookDescription = foundBooksByAuthorNameAndSurname.get(i).shortDescription.toString();
                    String previousText = listTextArea.getText();           
                    listTextArea.setText(previousText + "\n" + "Title: "+ bookTitle + " , " + "Short Description: " + bookDescription);                 
                }   
            }
            
        }
        else {
            showBox.infoBox("Please enter proper Auhtor Name And Surname", "List Books according to Author");
        }       
        ListBookTextField.setText("");
    }//GEN-LAST:event_listByNameSurnameBtnActionPerformed

    private void ListByCategoryAccordingRatingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListByCategoryAccordingRatingBtnActionPerformed
        listTextArea.setText("");

        String category = ListBookTextField.getText().toString().toLowerCase();
        
        if(category!= null && !category.equals("")){
               ArrayList <Book> categorySortedByRatingList = library.ListTheBooksGivenCategoryAndSortAccordingRating(category,library.getBookListInLibrary());
        
                for(int i = 0; i<categorySortedByRatingList.size(); i++){
                    if(i == 0){
                        String bookTitle = categorySortedByRatingList.get(i).title.toString();
                        String bookRating = String.valueOf(categorySortedByRatingList.get(i).rating);
                        listTextArea.setText("Title: "+ bookTitle+ "Book" + "Rating: " + bookRating);          
                    }
                    else {
                    String bookTitle = categorySortedByRatingList.get(i).title.toString();
                    String bookRating = String.valueOf(categorySortedByRatingList.get(i).rating);
                    String previousText = listTextArea.getText();
            
                    listTextArea.setText(previousText + "\n" + "Title: "+ bookTitle + " Book " + " Rating" +bookRating);                  
                    }  
                }   
        }
        else {
            showBox.infoBox("Please enter proper category", "List Category according to rating");
        }  
        ListBookTextField.setText("");
    }//GEN-LAST:event_ListByCategoryAccordingRatingBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        String deleteField = deleteBookbyIdTextField.getText().toString(); 
  
        if(deleteField != null && !deleteField.equals("")) {
            Book book = library.findBookById(deleteField,library.getBookListInLibrary());
        
            int deleteFieldNumeric = Integer.parseInt(deleteField);
            
            if(book != null) {
                String bookTitle = book.title;
                String bookId = String.valueOf(book.bookId);
        
                int sizeOfBookList = library.getBookListInLibrary().size();
        
                try {
                    FileHandler.deleteBookFromFileAndList(deleteField,library.getBookListInLibrary());
                } catch (IOException ex) {
                  Logger.getLogger(MainPage.class.getName()).log(Level.SEVERE, null, ex);
                }   
                showBox.infoBox("The book deleted : "+ bookTitle + "deleted by id : " + " " + bookId, "Deleted Book");
                isDeletedLabel.getText();
                isDeletedLabel.setText("The book deleted : "+ bookTitle + "deleted by id : "+bookId);          
            }
            else {
                showBox.infoBox("No book found associated with id : "+deleteField, "No Deletion");
                isDeletedLabel.getText();
                isDeletedLabel.setText("No book found associated with id : "+deleteField);           
            }
                       
        }
        else {
            showBox.infoBox("Please Enter proper book id. ", "No Deletion");
        }
       deleteBookbyIdTextField.setText("");
       imageViewLabel.revalidate();     
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void listNumberOfBooksByYearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listNumberOfBooksByYearBtnActionPerformed
        
        String bookYear = ListBookTextField.getText();
        
        if(bookYear!=null && !bookYear.equals("")){
            ArrayList<Book> bookListAccordingGivenYear = library.listTheBooksAccordingToYear(bookYear,library.getBookListInLibrary());
        
            for(int i = 0; i<bookListAccordingGivenYear.size(); i++){
            if(i == 0){
                String bookTitle = bookListAccordingGivenYear.get(i).title.toString();
                listTextArea.setText("Title: "+ bookTitle);          
            }
            else {
                    String bookTitle = bookListAccordingGivenYear.get(i).title.toString();
                    String previousText = listTextArea.getText();           
                    listTextArea.setText(previousText + "\n" + "Title: "+ bookTitle);                 
            }    
        }   
        int listSize = bookListAccordingGivenYear.size();
        String numberOfBooks = String.valueOf(listSize);
        listTextArea.append("\n"+ "The number of books according to the given year" + "("+ bookYear + ") : "+ " "  + numberOfBooks);           
        }
        else {           
            showBox.infoBox("Please Enter proper year  ","Find Book From Given Year");
        } 
        ListBookTextField.setText("");
    }//GEN-LAST:event_listNumberOfBooksByYearBtnActionPerformed

    private void findBookByTitleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBookByTitleBtnActionPerformed
        
        String bookTitle = camelCase(findBookField.getText());  
        
        if(bookTitle.equals("")){
            showBox.infoBox("Please enter title or keyword for finding  book : ", "Find Book");
        }
        
        ArrayList <Book> containingKeywordOrTitleList =library.findByTitle(bookTitle,library.getBookListInLibrary());
        
        for(int i = 0; i<containingKeywordOrTitleList.size(); i++){
            if(!(bookTitle.equals(""))){
                if(i == 0){
                bookInformationTextArea.setText(containingKeywordOrTitleList.get(i).toString());          
                }
                else {
                    String bookInformation = containingKeywordOrTitleList.get(i).toString();
                    String previousText = bookInformationTextArea.getText();
                    bookInformationTextArea.setText(previousText + "\n" + bookInformation);         
                }                        
            }           
        }
        findBookField.setText("");       
    }//GEN-LAST:event_findBookByTitleBtnActionPerformed

    private void findBookByIdBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBookByIdBtnActionPerformed
        imageViewLabel.setText("");
        String bookId = findBookField.getText();

        if(bookId != null && !bookId.equals("")){
            int numericBookId = Integer.parseInt(bookId);
            Book foundedBookById = library.findBookById(bookId,library.getBookListInLibrary());
            if(foundedBookById!=null){
                if(numericBookId < 6){
                    bookInformationTextArea.setText(foundedBookById.toString());
                    imageViewLabel.setIcon(coverArray[numericBookId-1]);
                    coverDemonstratorLabel.setText("Book Cover");
            }
            }else{
                showBox.infoBox("No book found associated with id: ","Book Information");
                imageViewLabel.revalidate();
            }
         }
        else {
            showBox.infoBox("Please enter proper id : ","Book Information");
        }
        findBookField.setText("");
    }//GEN-LAST:event_findBookByIdBtnActionPerformed
 
     String camelCase(String str)
    {
        StringBuilder builder = new StringBuilder(str);
        // Flag to keep track if last visited character is a 
        // white space or not
        boolean isLastSpace = true;
        
        // Iterate String from beginning to end.
        for(int i = 0; i < builder.length(); i++)
        {
            char ch = builder.charAt(i);
            
            if(isLastSpace && ch >= 'a' && ch <='z')
            {
                // Character need to be converted to uppercase
                builder.setCharAt(i, (char)(ch + ('A' - 'a') ));
                isLastSpace = false;
            }
            else if (ch != ' ')
                isLastSpace = false;
            else
                isLastSpace = true;
        }
    
        return builder.toString();
    }
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ListBookTextField;
    private javax.swing.JButton ListByCategoryAccordingRatingBtn;
    private javax.swing.JButton addBookBtn;
    private static javax.swing.JLabel bookFinderLbl;
    private javax.swing.JTextArea bookInformationTextArea;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton categoryListBtn;
    private javax.swing.JLabel coverDemonstratorLabel;
    private javax.swing.JTextField deleteBookbyIdTextField;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton findBookByIdBtn;
    private javax.swing.JButton findBookByTitleBtn;
    private javax.swing.JTextField findBookField;
    private javax.swing.JLabel imageViewLabel;
    private javax.swing.JLabel isDeletedLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton listByNameSurnameBtn;
    private javax.swing.JButton listNumberOfBooksByYearBtn;
    private javax.swing.JTextArea listTextArea;
    // End of variables declaration//GEN-END:variables
}
